# ==========================================
# RINDA CallOps Environment Configuration
# ==========================================
# Copy this file to .env and fill in your values
# All fields marked as REQUIRED must be set for the application to run

# ==========================================
# LiveKit Configuration (REQUIRED)
# ==========================================
# LiveKit provides the real-time voice infrastructure
# Sign up at: https://livekit.io
# 1. Create a new project
# 2. Go to Settings → Keys
# 3. Copy your URL, API Key, and API Secret

LIVEKIT_URL=wss://your-project.livekit.cloud
LIVEKIT_API_KEY=your-api-key
LIVEKIT_API_SECRET=your-api-secret

# ==========================================
# OpenAI Configuration (REQUIRED)
# ==========================================
# Powers the AI conversations and tool generation
# Get your API key at: https://platform.openai.com/api-keys
# 1. Sign up or log in to OpenAI
# 2. Go to API Keys section
# 3. Create a new secret key
# 4. Add payment method (required for API usage)

OPENAI_API_KEY=sk-...

# ==========================================
# Voice Processing (OPTIONAL)
# ==========================================
# These are optional if you want to use alternative voice engines
# By default, we use OpenAI Realtime API

# Deepgram (Speech-to-Text alternative)
# Sign up at: https://console.deepgram.com
# Create new API key in Dashboard → API Keys
# DEEPGRAM_API_KEY=

# Cartesia (Text-to-Speech alternative)
# Sign up at: https://www.cartesia.ai
# Get API key from your dashboard
# CARTESIA_API_KEY=

# ==========================================
# Twilio Configuration (OPTIONAL) > Still not integerated
# ==========================================
# Required only if you want to handle real phone calls
# Sign up at: https://www.twilio.com
# 1. Create account and verify your phone number
# 2. Get credentials from Console Dashboard
# 3. Buy a phone number ($1/month) from Phone Numbers → Buy a Number
# 4. Configure webhook URL to: YOUR_DOMAIN/api/webhooks/twilio/voice

# TWILIO_ACCOUNT_SID=
# TWILIO_AUTH_TOKEN=
# TWILIO_PHONE_NUMBER=+1234567890  # Format: +country_code + number

# ==========================================
# Server Configuration
# ==========================================
# Default values should work for local development

API_PORT=8000
API_HOST=0.0.0.0
WEBHOOK_URL=http://localhost:8000/webhooks  # Update to your domain in production

# ==========================================
# Redis Configuration (OPTIONAL)
# ==========================================
# Used for caching and performance optimization
# Install Redis locally or use a cloud service like Redis Cloud
# Default: redis://localhost:6379

REDIS_URL=redis://localhost:6379

# ==========================================
# Frontend Configuration
# ==========================================
# URL where your frontend is hosted

FRONTEND_URL=http://localhost:3000

# ==========================================
# Firebase Configuration (REQUIRED)
# ==========================================
# Firebase provides authentication and database
# Set up at: https://console.firebase.google.com
# 1. Create a new project or select existing
# 2. Go to Project Settings → Service Accounts
# 3. Click "Generate new private key"
# 4. Open the downloaded JSON file
# 5. Copy values from the JSON to here

FIREBASE_PROJECT_ID=your-project-id
FIREBASE_PRIVATE_KEY_ID=your-private-key-id
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n"
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your-project.iam.gserviceaccount.com
FIREBASE_CLIENT_ID=your-client-id
FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token
FIREBASE_AUTH_PROVIDER_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
FIREBASE_CLIENT_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/[FIREBASE_CLIENT_EMAIL]

# ==========================================
# Google OAuth Configuration (REQUIRED for Google Sheets)
# ==========================================
# Enables Google Sheets integration and OAuth login
# Set up at: https://console.cloud.google.com
# 1. Create new project or select existing
# 2. Enable Google Sheets API and Google Drive API
# 3. Go to APIs & Services → Credentials
# 4. Create OAuth 2.0 Client ID (Web application)
# 5. Add authorized redirect URIs:
#    - http://localhost:3000/api/auth/callback/google (development)
#    - https://yourdomain.com/api/auth/callback/google (production)
# 6. Copy Client ID and Client Secret

GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=GOCSPX-your-client-secret

# ==========================================
# Additional Notes
# ==========================================
# - Never commit your .env file to version control
# - Keep your API keys secure and rotate them regularly
# - Use different keys for development and production
# - Monitor your API usage to avoid unexpected charges
# - For production, use environment variables from your hosting provider

# ==========================================
# Troubleshooting
# ==========================================
# If you encounter issues:
# 1. Ensure all REQUIRED fields are filled
# 2. Check that API keys are active and have proper permissions
# 3. Verify webhook URLs are accessible from the internet (use ngrok for local testing)
# 4. Check the logs: cd server && uv run run.py
# 5. Join our Discord for help: https://discord.gg/rinda